heat_template_version: 2021-04-16
#
# template for the deployment of an instance with docker
#
# 2022-08-14 Christian Otto Stelter <christian.stelter@plusserver.com>

description: Instance template with Docker

parameters:
  host_name:
    type: string
    default: "docker01"
  key_name:
    type: string
    constraints:
      - custom_constraint: nova.keypair
  public_network:
    type: string
    default: ext01
  private_network:
    type: string
    constraints:
      - custom_constraint: neutron.network
  image:
    type: string
    default: Ubuntu 22.04
    constraints:
      - custom_constraint: glance.image
      - allowed_values:
        - Ubuntu 22.04
        - Ubuntu 20.04
  flavor:
    type: string
    default: SCS-2V:4:20
    constraints:
      - allowed_values:
        - SCS-2V:2:20
        - SCS-2V:4:20
        - SCS-2V:4:50
        - SCS-4V:8:50

resources:
  allow_docker_ssh_access:
    type: OS::Neutron::SecurityGroup
    properties:
      description: allow incoming SSH and ICMP traffic from anywhere
      name: allow_docker_ssh_and_icmp
      rules:
        - { direction: ingress, remote_ip_prefix: 0.0.0.0/0, port_range_min: 22, port_range_max: 22, protocol: tcp }
        - { direction: ingress, remote_ip_prefix: 0.0.0.0/0, protocol: icmp }

  allow_docker_web_access:
    type: OS::Neutron::SecurityGroup
    properties:
      description: allow incoming web traffic via http/https from anywhere
      name: allow_docker_web
      rules:
        - { direction: ingress, remote_ip_prefix: 0.0.0.0/0, port_range_min: 80, port_range_max: 80, protocol: tcp }
        - { direction: ingress, remote_ip_prefix: 0.0.0.0/0, port_range_min: 443, port_range_max: 443, protocol: tcp }

  host:
    type: OS::Nova::Server
    properties:
      name: { get_param: host_name }
      user_data_format: RAW
      user_data: { get_resource: cloud-init-config }
      image: { get_param: image }
      key_name: { get_param: key_name }
      flavor: { get_param: flavor }
      networks:
        - port: { get_resource: port }

  cloud-init-config:
   # cloud init resource
   type: OS::Heat::CloudConfig
   properties:
      cloud_config:
        package_update: true
        package_upgrade: true
        package_reboot_if_required: true
        write_files:
          - content: |
              #!/usr/bin/env bash
              export DEBIAN_FRONTEND=noninteractive
              curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add -
              echo "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" > /etc/apt/sources.list.d/docker-ce.list
              apt update
              apt -y install docker-ce docker-compose
              usermod -aG docker ubuntu
            path: /root/docker-ce-install.sh
            permissions: 0755
        runcmd:
            - /root/docker-ce-install.sh
        packages:
          - ca-certificates
          - curl
          - software-properties-common
          - apt-transport-https
          - net-tools

  port:
    type: OS::Neutron::Port
    depends_on: [ allow_docker_ssh_access, allow_docker_web_access ]
    properties:
      network: { get_param: private_network }
      security_groups: [ get_resource: allow_docker_ssh_access, get_resource: allow_docker_web_access ]

  public_server_ip:
    type: OS::Neutron::FloatingIP
    depends_on: [ port ]
    properties:
      floating_network: { get_param: public_network }
      port_id: { get_resource: port }

outputs:
  public_ip_address:
    description: Public IP address of the server
    value: { get_attr: [ public_server_ip, floating_ip_address ] }
